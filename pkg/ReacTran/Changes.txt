#Karline: DONE
two arguments per property -> one argument, either one value, a vector or a list

OK for tran.1D
tran.1D <- function(C, C.up=C[1], C.down=C[length(C)],
     flux.up=NULL, flux.down=NULL, a.bl.up=NULL, C.bl.up=NULL,
		 a.bl.down=NULL, C.bl.down=NULL,
     D=0, v=0, AFDW=1, VF=1, A=1, grid=NULL,
     full.check = FALSE, full.output = FALSE) {

Default for D: 0 (i.e. no mixing) rather than NULL.


## UNSURE:
But what with tran.2D???? D.x, D.y, D.grid????

suggestion:
=> D.x, D.y
=> (REMOVE D.grid)

-> D.x, D.y ~ one value, a vector or a grid

## Not done
u rather than v?? NO: v ~ velocity






TO DO:
####
Tran.volume.1D: ook u (advectie)

tran.2D en tran.volume.1D compatible with tran.1D

tran.volume.1D: only backward differences...

Allow negative velocities in tran.2D


#### GEVAARLIJKE OPTIES:    WAARSCHUWEN
# VF als vector !
## Zie Sidia.r

In SiDia model:

Porosity <- exp.profile(Grid$x.int, y.0=p.0, y.inf=p.inf, x.att=0.5)
Por.mid  <- exp.profile(Grid$x.mid, y.0=p.0, y.inf=p.inf, x.att=0.5)

EN in transport:

... VF = Porosity ....

 dDSi        <- DSiTran$dC                      +           # transport
                Dissolution * (1-Por.mid)/Por.mid           # biogeochemistry


GEVOLG: massa budget NIET gesloten. Probleem: 2 verschillende porositeiten:
Por. mid  voor geochemie; 0.5*(Porosity[1:N]+Porosity[2:(N+1)]) voor transport


##
zero-gradient en niet-backward advection -> influx ! keep in mind